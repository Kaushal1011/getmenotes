{'Pyo': [[' Pyo Uses its own server to manage audio operations ', ''], [' Notein class of Pyo is used to\n Receive midi notes, convert pitch to Hz and manage 10 voices of polyphony.\n ', '                self.note = Notein(poly=10, scale=1, first=0, last=127)\n       '], [' Notein.keyboard() is used to display a gui keyboard on screen which mimics a virtual keyboard\n ', '        self.note.keyboard()\n        '], [' Handle pitch and velocity (Notein outputs normalized amplitude (0 -> 1)).\n', "        self.pit = self.note['pitch'] * self.transpo\n        "]], 'S3Synth': [[' S3Synth is a class that makes an audio processing based on certain defined routes\n <rgm> ![](routes.png) </rgm>\n ', ''], [' This handles the enveloping mechanism of this synthesiser\n ', "        self.amp = MidiAdsr(0.5 * self.note['velocity'],\n                            attack=0.1,\n                            decay=1,\n                            sustain=.5,\n                            release=2,\n                            mul=.4)\n        "], [' Create Oscilattor\n self.scope1=Scope(Mix([-1*self.osc1,-1*self.osc2]))\n self.scope1.g\n Selector takes multiple inputs and interpolates\n between them to generate a single output.\n Stereo mix using Band-limited Low Frequency Oscillator\n with different wave shapes.\n Mix audio streams\n', '        self.osc1 = Osc(table=self.t, freq=self.pit, mul=self.amp)\n        self.osc2 = Osc(table=self.t2, freq=self.pit, phase=0.25, mul=self.amp)\n        self.osc22 = Osc(table=self.t2,\n                         freq=self.pit + np.pi / 2,\n                         mul=self.amp)\n                \n                        self.osccos = Selector([self.osc2, self.osc22], voice=0.15)\n        self.osccos.ctrl(title="Shift modulation amount")\n\n                        self.osc3 = LFO(self.pit, sharp=0.5, type=2, mul=self.amp)\n        self.osc3.ctrl(\n            title=\n            \'Osc3 type 0=saw u 1=saw d 2=sq 3=tri 4=pulse 5=bipulse 6=s&h 7=Sine\'\n        )\n\n        self.osc4 = LFO(self.pit, sharp=0.5, type=0, mul=self.amp)\n        self.osc4.ctrl(\n            title=\n            "Osc4 type 0=saw u 1=saw d 2=sq 3=tri 4=pulse 5=bipulse 6=s&h 7=Sine"\n        )\n\n        self.extrasel = Selector(\n            [self.osc3.mix(1), self.osc4.mix(1)], mul=0.05, voice=0.5)\n        self.mainsel = Selector(\n            [self.osc1.mix(1), self.osccos.mix(1)], mul=1, voice=0.5)\n        self.mainsel.ctrl(title="Main Oscillator Volume")\n        self.extrasel.ctrl(title="Extra Oscillator Volume Ctrl")\n\n                self.mix = Mix([self.mainsel.mix(1), self.extrasel.mix(1)], voices=2)\n        ']]}
